#! /bin/bash

# fail on error
set -eo pipefail

valid_users=("uni_qgo");
release_version_prefix="v";

## ---------------------------- UTILITY FUNCTIONS ----------------------------
function showHelp {
    cat<<EOF
Usage: $0 profile

Argument description:
  profile    =>    the profile for which we want to create a new set of Solr configuration files and data-set

  Example: $0 dev
EOF
}

function nextReleaseVersion {
   current_release="$(ls $release_dir | sed "s/${release_version_prefix}//g" | sort -n | tail -1)";

   if [ ! -z "$current_release" ]; then
    next_release="${release_version_prefix}$((current_release + 1))";
   else
    next_release="${release_version_prefix}1";
   fi
}

# ------------------------ SOURCE NECESSARY FILES ------------------------
if ! source "$QUICKGO_SCRIPTS_DIR/common/common" || ! source "$QUICKGO_SCRIPTS_DIR/common/common.variables" || ! source "index.variables" ||
! source "../common/lsf.command.variables"; then
    prettyEcho "<error>Required properties files were not found. Please make sure you're in the right directory.</error>";
    exit 1;
fi

# ------------------------ VALIDATE PARAMETERS ------------------------
if [ $# -ne 1 ]; then
    showHelp;
    exit 1;
fi
requested_profile="$1"

# check profile specified is correct
if ! isValidProfileId "$requested_profile"; then
    prettyEcho "<error>Invalid profile name: $requested_profile.
                    Please check your index.variables and vm-profiles.properties file.</error>";
    exit 1;
fi

# ------------------------ start off the indexing via LSF ------------------------

release_dir="${solr_index_dir}/${requested_profile}";

if [ ! -d "$release_dir" ]; then
    prettyEcho "<info>Directory for storing solr-indexes [${release_dir}] NOT FOUND. Creating...</info>";
    mkdir -p "$release_dir";
fi

# calculate the next release for the current $release_dir
nextReleaseVersion;

# create dir for current release
release_dir="${release_dir}/${next_release}/conf";
mkdir -p "$release_dir";

prettyEcho "<info>Executing fetch-libraries.</info>"
../fetch-libraries "$release_dir" "$requested_profile";

prettyEcho "<info>Executing update-solr-schema.</info>"
../update-solr-schema "$requested_profile";
