## ================= Search =================
# the fields to return in search results from a solr query
# ontology search: if you define a value, ensure ontologyType is also included
annotation:
  terms:
    query:
      compatible:
        fields: ['assignedBy', 'evidenceCode', 'goEvidence', 'goId', 'dbSubset', 'geneProductType', 'qualifier',
        'targetSet', 'taxonId', 'geneProductId']
  validation:
    validationResource: classpath:/DB_XREFS_ENTITIES.dat.gz
    chunk: 30
    headerLines: 1
    reference_dbs: ['pmid', 'doi', 'go_ref', 'reactome']
  download:
    ontologySource: classpath:/ONTOLOGY_IRI.dat.gz
    pageSize: 6
  metadata:
    source: classpath:/goa_uniprot.gpa-version

search:
  external:
    filterConfigs:
      - signature: descendants,evidenceCode,evidenceCodeUsageRelationships
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/ontology/eco/terms/{evidenceCode}/descendants?relations={evidenceCodeUsageRelationships}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.OntologyRelatives",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.DescendantsFilterConverter"
        }
      - signature: descendants,goId,goUsageRelationships
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/ontology/go/terms/{goId}/descendants?relations={goUsageRelationships}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.OntologyRelatives",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.DescendantsFilterConverter"
        }
      - signature: descendants,andGoId,andGoUsageRelationships
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/QuickGO/services/ontology/go/terms/{andGoId}/descendants?relations={andGoUsageRelationships}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.OntologyRelatives",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.AndDescendantsFilterConverter"
        }
      - signature: descendants,notGoId,notGoUsageRelationships
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/QuickGO/services/ontology/go/terms/{notGoId}/descendants?relations={notGoUsageRelationships}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.OntologyRelatives",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.NotDescendantsFilterConverter"
        }
      - signature: goId,goUsageRelationships,slim
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/ontology/go/slim?slimsToIds={goId}&relations={goUsageRelationships}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.OntologyRelatives",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.SlimmingFilterConverter"
        }
      - signature: goId,goName
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/ontology/go/terms/{goId}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.BasicOntology",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.BasicOntologyIdentityFilterConverter"
        }
      - signature: taxonId,taxonName
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/proteins/api/taxonomy/id/{taxonId}/node",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.BasicTaxonomyNode",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.BasicTaxonomyNodeIdentityFilterConverter"
        }
      - signature: evidenceCode,evidenceName
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/ontology/eco/terms/{evidenceCode}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.BasicOntology",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.BasicOntologyIdentityFilterConverter",
          timeout: 15000
        }
      - signature: canonicalId,name
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/QuickGO/services/geneproduct/{canonicalId}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.geneproduct.model.BasicGeneProduct",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.geneproduct.converter.GeneProductFilterConverter",
          timeout: 15000
        }
      - signature: canonicalId,synonyms
        execution: REST_COMM
        properties: {
          ip: "https://localhost",
          resourceFormat: "/QuickGO/services/geneproduct/{canonicalId}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.geneproduct.model.BasicGeneProduct",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.geneproduct.converter.GeneProductFilterConverter",
          timeout: 15000
        }
  wildcard:
    fields: extension_unsorted
model:
  repo-to-domain-field-name-transformations:
    transformations: {
      goId_join: goId,
      goAspect: aspect
    }

## ========== Co-occurring Terms ==========
coterm:
   manual: classpath:/coterms/CoTermsManual
   all: classpath:/coterms/CoTermsAll
   headerLines: 1
   limit: 30
spring:
  threads:
    virtual:
      enabled: true

---
## ==========
spring:
   config.activate.on-profile: download-task-executor-test
  threads:
    virtual:
      enabled: true
annotation:
  download:
    taskExecutor:
      corePoolSize: 10
      maxPoolSize: 20
      queueCapacity: 100
      keepAliveSeconds: 600
      allowCoreThreadTimeout: false
      waitForTasksToCompleteOnShutdown: true

---
## ==========
spring:
   config.activate.on-profile: stats-type-limit-properties-test
  threads:
    virtual:
      enabled: true
annotation:
  stats:
    typeLimitsForStandardUsage:
      goId: 18
      taxonId: 11
      typeDoesNotExist: 12
    typeLimitsForDownloadUsage:
      goId: 500
      taxonId: 50
      typeDoesNotExist: 5
